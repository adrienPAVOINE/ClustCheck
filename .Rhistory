}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vcramer <- Vcramer.Data(instance)
clus_names<- unique(data[[vargroupe]])
data.quanti<- data[ ,ind.quanti]
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$vargroupe = vargroupe
instance$clusters_data <- data[[vargroupe]]
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vcramer <- Vcramer.Data(instance)
clus_names<- unique(data[[vargroupe]])
data.quanti<- data[ ,ind.quanti]
print("ok")
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$vargroupe = vargroupe
instance$clusters_data <- data[[vargroupe]]
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
print("ok")
instance$vcramer <- Vcramer.Data(instance)
clus_names<- unique(data[[vargroupe]])
data.quanti<- data[ ,ind.quanti]
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$vargroupe = vargroupe
instance$clusters_data <- data[[vargroupe]]
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
#instance$vcramer <- Vcramer.Data(instance)
clus_names<- unique(data[[vargroupe]])
data.quanti<- data[ ,ind.quanti]
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$vargroupe = vargroupe
instance$clusters_data <- data[[vargroupe]]
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data, "Cluster")
#' @examples
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vargroupe = vargroupe
instance$vcramer <- Vcramer.Data(instance)
clus_names<- unique(data[[vargroupe]])
data.quanti<- data[ ,ind.quanti]
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$clusters_data <- data[[vargroupe]]
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vargroupe = vargroupe
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$vcramer <- Vcramer.Data(instance)
clus_names<- unique(data[[vargroupe]])
data.quanti<- data[ ,ind.quanti]
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$clusters_data <- data[[vargroupe]]
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data, "Cluster")
Dataset(data.qual, "Cluster")
data.qual
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
instance$vargroupe = vargroupe
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$clusters_data <- data[[vargroupe]]
clus_names<- unique(data[[vargroupe]])
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}else{
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vcramer <- Vcramer.Data(instance)
}
nd.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}else{
i
data.quanti<- data[ ,ind.quanti]
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
}
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data.qual, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
instance$vargroupe = vargroupe
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$clusters_data <- data[[vargroupe]]
clus_names<- unique(data[[vargroupe]])
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}else{
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vcramer <- Vcramer.Data(instance)
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}else{
data.quanti<- data[ ,ind.quanti]
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
}
instance$cluster_names <- clus_names
instance$corr.ratio <- Corr_ratios.Data(instance)
class(instance) <- "Data"
return(instance)
}
Dataset(data.qual, "Cluster")
Dataset(data, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
FactoDataset <- function(data,vargroupe){
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
stop("vous n'avez pas de variables qualitatives autre que ", vargroupe, " dans votre dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance <- list()
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vargroupe = vargroupe
instance$vcramer <- Vcramer.FactorDataset(instance)
class(instance) <- "FactorDataset"
return(instance)
}
FactoDataset(data, "Cluster")
#'
#' @return a Factordataset object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
Dataset <- function(data,vargroupe){
instance <- list()
instance$vargroupe = vargroupe
instance$data <- data
instance$p <- ncol(data)
instance$n <- nrow(data)
instance$clusters_data <- data[[vargroupe]]
clus_names<- unique(data[[vargroupe]])
#controle - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
print("vous n'avez pas de variables qualitatives autre que  dans votre dataset")
}else{
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data.qual = data.qual
instance$vcramer <- Vcramer.Data(instance)
}
ind.quanti = sapply(data,function(x)is.numeric(x))
nb_quanti <- sum(ind.quanti)
if (nb_quanti < 1 ){
print("There are no quantitative variables in your dataset")
}else{
data.quanti<- data[ ,ind.quanti]
instance$data.quanti <- data.quanti
instance$p.quanti <- ncol(data.quanti)
instance$var.quanti.names <- names(data.quanti)
instance$corr.ratio <- Corr_ratios.Data(instance)
}
instance$cluster_names <- clus_names
class(instance) <- "Data"
return(instance)
}
data.qual <- subset(data, select =c(1,2,4,9))
Dataset(data.qual, "Cluster")
data <- read.csv("C:/Users/adrien/Documents/Test_data/BankCustomer.csv", sep=";", dec=",")
#fonction pour centrage-réduction
CR <- function(x){
n <- length(x)
m <- mean(x)
v <- (n-1)/n*var(x)
return((x-m)/sqrt(v))
}
#appliquer la fonction sur les variables continues
autos.cont <- data.frame(lapply(subset(data,select=c(1,2,4)),CR))
print(autos.cont)
#codage disjonctif complet
library(ade4)
autos.disc <- acm.disjonctif(subset(data,select=c(3,5,6,7)))
print(autos.disc)
#fonction pour pondération des indicatrices
PF <- function(x){
m <- mean(x)
return(x/sqrt(m))
}
#appliquer la pondération sur les indicatrices
autos.disc.pond <- data.frame(lapply(autos.disc,PF))
#données transformées envoyées à l'ACP
autos.pour.acp <- cbind(autos.cont,autos.disc.pond)
rownames(autos.pour.acp) <- rownames(data)
print(round(autos.pour.acp,3))
library(ClustCheck)
obj <- ClustCheck::FactorDataset(data,"Cluster")
ClustCheck::Vcramer.FactorDataset(obj)
ClustCheck::Vcramer.FactorDataset(obj, "profession")
plotVCramer(obj)
plotphi(obj,"Cluster")
plotphi(obj,"profession")
