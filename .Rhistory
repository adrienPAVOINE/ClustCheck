}
print(liste)
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(l)
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(l)
print(matrix(l))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(l)
print(matrix(l),nrow=nb_col,ncol=2)
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=2))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=2, dimnames = c("var","cramer")))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=2, dimnames = list(c("var","cramer"), colnames(object$data.qual))))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,colname,cramer)
}
print(matrix(l,nrow=nb_col,ncol=2, dimnames = list(c("var","cramer"), colnames(object$data.qual))))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(c("var","cramer"), colnames(object$data.qual))))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(c("var","cramer"), colnames(object$data.qual))))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(c("cramer"), colnames(object$data.qual))))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(cramer, colnames(object$data.qual))))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(l)
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(colnames(object$data.qual),"cramer")))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(cat(colnames(object$data.qual), " x " object$vargroupe),"Cramer")))
}
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(cat(colnames(object$data.qual), " x " ,object$vargroupe),"Cramer")))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(cat(colnames(object$data.qual), " x variable de groupe"),"Cramer")))
}
Vcramer.MultiFactor(obj)
#' Vcramer.UnivFactor
#'
#' @param object an UnivFator object
#'
#' @return a matrice
#' @export
#'
#' @examples
Vcramer.MultiFactor <- function(object){
nb_col <- ncol(object$data.qual)
l<-c()
for (i in 1:nb_col){
colname <- colnames(object$data.qual)[i]
tableau <- table(object$data[[colname]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(colnames(object$data.qual),"Cramer")))
}
Vcramer.MultiFactor(obj)
library(ClustCheck)
data = (read.csv("C:/Users/adrien/Documents/ClustCheck/data.csv", sep=";"))
data$groupe = factor(data$groupe)
data$vraigroupe = factor(data$vraigroupe)
data$Région = factor(data$Région)
obj <- MultiFactorConstr(data ,"groupe")
Vcramer.MultiFactor(obj)
VisualisationAFC.MultiFactor(obj)
library(ClustCheck)
data <- read.csv("C:/Users/adrien/Downloads/train.csv",sep=",")
data
obj <- FactorDataset(obj,"Embarked")
obj <- ClustCheck::FactoDataset(data, "Embarked")
library(ClustCheck)
data <- read.csv("C:/Users/adrien/Downloads/train.csv",sep=",")
obj <- ClustCheck::FactoDataset(data, "Embarked")
#' Vcramer.FactorDataset
#'
#' @param object a object
#' @param var if you just want the Cramer for one var
#'
#' @return
#' @export
#'
#' @examples
Vcramer.FactorDataset <- function(object, var = FALSE){
if(var == FALSE){
l<-c()
for (i in object$var.qual.names){
tableau <- table(object$data[[i]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=nb_col,ncol=1, dimnames = list(colnames(object$data.qual),"Cramer")))
}else{
tableau <- table(object$data[[var]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
cat("cramer entre la var groupe et ", var," = ", cramer)
}
}
Vcramer.FactorDataset(obj)
obj <- ClustCheck::FactoDataset(data, "Embarked")
#' Vcramer.FactorDataset
#'
#' @param object a object
#' @param var if you just want the Cramer for one var
#'
#' @return
#' @export
#'
#' @examples
Vcramer.FactorDataset <- function(object, var = FALSE){
if(var == FALSE){
l<-c()
for (i in object$var.qual.names){
tableau <- table(object$data[[i]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
l <- c(l,cramer)
}
print(matrix(l,nrow=object$p.qual,ncol=1, dimnames = list(colnames(object$data.qual),"Cramer")))
}else{
tableau <- table(object$data[[var]],object$data[[object$vargroupe]])
nli <- nrow(tableau)
nco <- ncol(tableau)
khi2 = chisq.test(tableau)$statistic
cramer = sqrt((khi2)/(nrow(object$data)*(min((nco-1),(nli-1)))))
cat("cramer entre la var groupe et ", var," = ", cramer)
}
}
#'
#' @return a object
#' @export
#' @importFrom grDevices rainbow
#' @importFrom stats dist reshape
#' @import questionr
#' @import FactoMineR
#' @import factoextra
#' @import ggplot2
#' @examples
FactoDataset <- function(data,vargroupe){
#contr?le - data.frame
ok <- is.data.frame(data)
if (!ok){
stop("Ce n'est pas un data frame")
}
ind.qual = sapply(data,function(x)is.factor(x)|is.character(x))
data.qual1 <- data[ ,ind.qual]
nb_ok <- sum(ind.qual)
if (nb_ok <= 1 ){
stop("vous n'avez pas de variables qualitatives autre que ", vargroupe, " dans votre dataset")
}
data.qual <- data.qual1[ , !(names(data.qual1) %in% vargroupe)]
instance <- list()
instance$p <- ncol(data)
instance$p.qual <- ncol(data.qual)
instance$all.var.qual <- data.qual1
instance$var.qual.names <- names(data.qual)
instance$data = data
instance$data.qual = data.qual
instance$vargroupe = vargroupe
instance$vcramer <- Vcramer.FactorDataset(instance)
class(instance) <- "FactorDataset"
return(instance)
}
obj <- ClustCheck::FactoDataset(data, "Embarked")
library(ClustCheck)
data <- read.csv("C:/Users/adrien/Downloads/train.csv",sep=",")
obj <- ClustCheck::FactoDataset(data, "Embarked")
VisualisationAC.FactorDataset(obj,"Cabin")
data <- read.csv("C:/Users/adrien/Document/test_data/BankCustomer.csv",sep=",")
data <- read.csv("C:/Users/adrien/Documents/Test_data/BankCustomer.csv",sep=",")
data <- read.csv("C:/Users/adrien/Documents/Test_data/BankCustomer.csv",sep=";")
data
data$Cluster <- factor(data$Cluster)
obj <- ClustCheck::FactoDataset(data, "Cluster")
VisualisationAC.FactorDataset(obj,"revenu")
VisualisationAC.FactorDataset(obj,"profession")
PhiValueTable.FactorDataset(obj,"revenu")
typeof(data$revenu)
data <- read.csv("C:/Users/adrien/Documents/Test_data/BankCustomer.csv",sep=";", dec=",")
obj <- ClustCheck::FactoDataset(data, "Cluster")
PhiValueTable.FactorDataset(obj,"profession")
TValueTable.FactorDataset(obj,"profession")
